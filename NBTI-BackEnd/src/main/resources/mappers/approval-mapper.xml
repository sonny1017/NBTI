<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
 <mapper namespace="Approval">
 
 	<insert id="insert">
 		insert into approval values(temp_seq.nextval, #{member_id}, sysdate, #{doc_sub_seq}, #{emergency}, 'n', '', #{doc_state_code})
 		<selectKey resultType="int" order="AFTER" keyProperty="temp_seq">
 			select temp_seq.currval from dual
 		</selectKey>
 	</insert>
 	
 	<select id="selectWriterIsMe" resultType="com.nbti.dto.ListDocDTO">
 		select 
	 		a.temp_seq, 
	 		a.member_id, 
	 		a.approval_date, 
	 		a.EMERGENCY, 
	 		ds.DOC_SUB_NAME, 
	 		a.APPROVAL_SEQ ,
	 		a.DOC_STATE,
	 		dd.TITLE,
	 		m.name 
 		from approval a 
 			left outer join members m on a.member_id = m.id
	 		left outer join doc_sub ds on a.DOC_SUB_SEQ = ds.DOC_FORM_SEQ
	 		left outer join doc_draft dd on a.TEMP_SEQ = dd.DRAFT_SEQ
	        left outer join DOC_LEAVE dl on a.temp_seq = dl.LEAVE_SEQ
	        left outer join DOC_VACATION dv on a.temp_seq = dv.vacation_seq
 		where member_id = #{id} and a.doc_state not in 't'
 		order by a.temp_seq desc
 	</select>
 	
 	<select id="selectReferIsMe" resultType="com.nbti.dto.ListDocDTO">
 		select 
	        a.temp_seq, 
	 		a.member_id, 
	 		a.approval_date, 
	 		a.EMERGENCY, 
	 		ds.DOC_SUB_NAME, 
	 		a.APPROVAL_SEQ ,
	 		a.DOC_STATE,
	        dd.TITLE,
	 		m.name 
 		from approval a 
 			left outer join members m on a.member_id = m.id
	        left outer join REFER_LINE rl on a.temp_seq = rl.TEMP_SEQ
	        left outer join doc_sub ds on a.DOC_SUB_SEQ = ds.DOC_FORM_SEQ
	        left outer join doc_draft dd on a.TEMP_SEQ = dd.DRAFT_SEQ
	        left outer join DOC_LEAVE dl on a.temp_seq = dl.LEAVE_SEQ
	        left outer join DOC_VACATION dv on a.temp_seq = dv.vacation_seq
 		where referer = #{id} and read='Y' and a.doc_state not in ('c','r')
 		order by a.temp_seq desc
 	</select>
 	
 	<select id="selectReferIsMeWait" resultType="com.nbti.dto.ListDocDTO">
 		select 
	        a.temp_seq, 
	 		a.member_id, 
	 		a.approval_date, 
	 		a.EMERGENCY, 
	 		ds.DOC_SUB_NAME, 
	 		a.APPROVAL_SEQ ,
	 		a.DOC_STATE,
	        dd.TITLE,
	 		m.name 
 		from approval a 
 			left outer join members m on a.member_id = m.id
	        left outer join REFER_LINE rl on a.temp_seq = rl.TEMP_SEQ
	        left outer join doc_sub ds on a.DOC_SUB_SEQ = ds.DOC_FORM_SEQ
	        left outer join doc_draft dd on a.TEMP_SEQ = dd.DRAFT_SEQ
	        left outer join DOC_LEAVE dl on a.temp_seq = dl.LEAVE_SEQ
	        left outer join DOC_VACATION dv on a.temp_seq = dv.vacation_seq
 		where referer = #{id} and read = 'N' and a.doc_state not in ('c','r')
 		order by a.temp_seq desc
 	</select>
 	
 	<select id="selectApprovalIsMe" resultType="com.nbti.dto.ListDocDTO">
	 	select 
	        a.temp_seq, 
	 		a.member_id, 
	 		a.approval_date, 
	 		a.EMERGENCY, 
	 		ds.DOC_SUB_NAME, 
	 		a.APPROVAL_SEQ ,
	 		a.DOC_STATE,
	        dd.TITLE,
	 		m.name 
 		from approval a 
 			left outer join members m on a.member_id = m.id
	        left outer join approval_LINE al on a.temp_seq = al.TEMP_SEQ
	        left outer join doc_sub ds on a.DOC_SUB_SEQ = ds.DOC_FORM_SEQ
	        left outer join doc_draft dd on a.TEMP_SEQ = dd.DRAFT_SEQ
	        left outer join DOC_LEAVE dl on a.temp_seq = dl.LEAVE_SEQ
	        left outer join DOC_VACATION dv on a.temp_seq = dv.vacation_seq
	 	where approval_id = #{id} and a.doc_state not in ('c','t')
	 	order by a.temp_seq desc
 	</select>
 	
 	<select id="selectApprovalWait" resultType="com.nbti.dto.ListDocDTO">
	 	select 
	        a.temp_seq, 
	 		a.member_id, 
	 		a.approval_date, 
	 		a.EMERGENCY, 
	 		ds.DOC_SUB_NAME, 
	 		a.APPROVAL_SEQ ,
	 		a.DOC_STATE,
	        dd.TITLE,
	 		m.name 
 		from approval a 
 			left outer join members m on a.member_id = m.id
	        left outer join approval_LINE al on a.temp_seq = al.TEMP_SEQ
	        left outer join doc_sub ds on a.DOC_SUB_SEQ = ds.DOC_FORM_SEQ
	        left outer join doc_draft dd on a.TEMP_SEQ = dd.DRAFT_SEQ
	        left outer join DOC_LEAVE dl on a.temp_seq = dl.LEAVE_SEQ
	        left outer join DOC_VACATION dv on a.temp_seq = dv.vacation_seq
	 	where al.approval_id = #{id} and al.member_state_code='w' and a.doc_state ='i'
	 	order by 
	 		case when a.emergency = 'Y' then 0 else 1 end asc,
	 		case when a.emergency = 'Y' then approval_date else null end asc,
	 		case when a.emergency = 'N' then approval_date else null end desc
 	</select>
 	
 	<select id="selectApprovalBook" resultType="com.nbti.dto.ListDocDTO">
	 	select 
	        a.temp_seq, 
	 		a.member_id, 
	 		a.approval_date, 
	 		a.EMERGENCY, 
	 		ds.DOC_SUB_NAME, 
	 		a.APPROVAL_SEQ ,
	 		a.DOC_STATE,
	        dd.TITLE,
	 		m.name 
 		from approval a 
 			left outer join members m on a.member_id = m.id 
	        left outer join approval_LINE al on a.temp_seq = al.TEMP_SEQ
	        left outer join doc_sub ds on a.DOC_SUB_SEQ = ds.DOC_FORM_SEQ
	        left outer join doc_draft dd on a.TEMP_SEQ = dd.DRAFT_SEQ
	        left outer join DOC_LEAVE dl on a.temp_seq = dl.LEAVE_SEQ
	        left outer join DOC_VACATION dv on a.temp_seq = dv.vacation_seq
	 		where al.approval_id = #{id} and al.member_state_code='b' and a.doc_state ='i'
	 		order by a.temp_seq desc
 	</select>
 	
 	<select id="selectReturn" resultType="com.nbti.dto.ListDocDTO">
	 	select 
		    a.temp_seq, 
		    a.member_id, 
		    a.approval_date, 
		    a.emergency, 
		    ds.doc_sub_name, 
		    a.approval_seq,
		    a.doc_state,
		    dd.title,
	 		m.name 
 		from approval a 
 			left outer join members m on a.member_id = m.id
			left outer join doc_sub ds on a.doc_sub_seq = ds.doc_form_seq
			left outer join doc_draft dd on a.temp_seq = dd.draft_seq
			left outer join doc_leave dl on a.temp_seq = dl.leave_seq
			left outer join doc_vacation dv on a.temp_seq = dv.vacation_seq
			where a.member_id = #{id} and a.doc_state = 'r'
			order by a.temp_seq desc
 	</select>
 	
 	<select id="selectCancle" resultType="com.nbti.dto.ListDocDTO">
 		select 
		    a.temp_seq, 
		    a.member_id, 
		    a.approval_date, 
		    a.emergency, 
		    ds.doc_sub_name, 
		    a.approval_seq,
		    a.doc_state,
		    dd.title,
	 		m.name 
 		from approval a 
 			left outer join members m on a.member_id = m.id
			left outer join doc_sub ds on a.doc_sub_seq = ds.doc_form_seq
			left outer join doc_draft dd on a.temp_seq = dd.draft_seq
			left outer join doc_leave dl on a.temp_seq = dl.leave_seq
			left outer join doc_vacation dv on a.temp_seq = dv.vacation_seq
			where a.member_id = #{id} and a.doc_state = 'c'
			order by a.temp_seq desc
 	</select>
 	
 	<select id="selectTemp" resultType="com.nbti.dto.ListDocDTO">
 		select 
		    a.temp_seq, 
		    a.member_id, 
		    a.approval_date, 
		    a.emergency, 
		    ds.doc_sub_name, 
		    a.approval_seq,
		    a.doc_state,
		    dd.title,
	 		m.name 
 		from approval a 
 			left outer join members m on a.member_id = m.id
			left outer join doc_sub ds on a.doc_sub_seq = ds.doc_form_seq
			left outer join doc_draft dd on a.temp_seq = dd.draft_seq
			left outer join doc_leave dl on a.temp_seq = dl.leave_seq
			left outer join doc_vacation dv on a.temp_seq = dv.vacation_seq
			where a.member_id = #{id} and a.doc_state = 't'
			order by a.temp_seq desc
 	</select>
 	
 	<select id="selectApproval" resultType="com.nbti.dto.ApprovalDTO">
 		select * from approval where temp_seq=#{seq}
 	</select>
 	
 	<!-- 문서 정보 최신화 -->
 	<update id="updateDocState">
 		update approval set doc_state = #{state} where temp_seq = ${temp_seq}
 	</update>
 	
 	<!-- 문서번호 생성 및 관리 -->
    <update id="createApprovalSeq" parameterType="map">
        DECLARE
            v_form_code VARCHAR2(3) := #{docHeader};
            v_current_year CHAR(2) := TO_CHAR(SYSDATE, 'YY');
            v_sequence_number NUMBER;
        BEGIN
            
            SELECT COALESCE(MAX(sequence_number), 0) INTO v_sequence_number
            FROM document_number
            WHERE form_code = v_form_code AND year = v_current_year;
            
            v_sequence_number := v_sequence_number + 1;

            MERGE INTO document_number d
            USING (SELECT v_form_code AS form_code, v_current_year AS year FROM dual) src
            ON (d.form_code = src.form_code AND d.year = src.year)
            WHEN MATCHED THEN
                UPDATE SET sequence_number = v_sequence_number
            WHEN NOT MATCHED THEN
                INSERT (form_code, year, sequence_number)
                VALUES (src.form_code, src.year, v_sequence_number);

            UPDATE approval
            SET approval_seq = v_form_code || '-' || v_current_year || '-' || TO_CHAR(v_sequence_number, 'FM000')
            WHERE temp_seq = #{temp_seq};
        END;
    </update>
    
    <update id="updateDocStateCancle">
    	update approval set doc_state = 'c' where temp_seq = ${seq}
    </update>
  
  	
  
 </mapper>